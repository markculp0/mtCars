geom_histogram ( fill = "salmon" , colour = "black",
binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = ",
round ( mse , 2 ), sep = "" ))
g
}
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
ggplot ( galton , aes ( x = parent , y = child )) + geom_point ()
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 ) g <-
g + geom_vline ( xintercept = mean ( galton $ child ), size = 3 )
g
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 ) g <-
g + geom_vline ( xintercept = mean ( galton $ child ), size = 3 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 ) g <-
g + geom_vline ( xintercept = mean ( galton $ child ), size = 3 )
g
rm(g)
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 ) g <-
g + geom_vline ( xintercept = mean ( galton $ child ), size = 3 )
g
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 )
g <- g + geom_vline ( xintercept = mean ( galton $ child ),
size = 3 )
g
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 )
g <- g + geom_vline ( xintercept = mean ( galton $ child ),
size = 3 )
g
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black",
binwidth = 1 )
g <- g + geom_vline ( xintercept = mean ( galton $ child ),
size = 3 )
g
ggplot ( galton , aes ( x = parent , y = child )) + geom_point ()
library (reshape2)
long <- melt(galton)
head(long)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
rm(mu)
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black",
binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = ",
round ( mse , 2 ), sep = "" ))
g
}
manipulate ( myHist ( mu ), mu = slider ( 62 , 74, step = 0.5 ))
parent - mean(parent)
galton$parent - mean(galton$parent)
I(galton$parent - mean(galton$parent))
?I
lm(I(child - mean(child)) ~ I(parent - mean(parent)), data = galton)
options(scipen = 999)
lm(I(child - mean(child)) ~ I(parent - mean(parent)), data = galton)
lm(I(child - mean(child)) ~ I(parent - mean(parent)) -1 , data = galton)
q()
library(swirl)
swirl()
install_course(Regression_Models)
install_course('Regression_Models'')
)
quit
)
;
]]]
000
exit
;
:::
??
library(swirl)
install_course("Regression_Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild, varRes, varEst)
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov()
cov(atten$mag)
cov(atten)
cov(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor,gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
rm(x,w)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
rm(x,xn)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
summary(fit)
rm(fit,x,y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
rm(x)
data("mtcars")
fit <- lm(mpg ~ weight, mtcars)
str(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
rm(mtcars)
rm(fit)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
summary(fit)
plot(x,y)
rm(fit,x,y)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mn <- mean(x)
x2 <- c(x,0.18,0.42,0.42)
mean(x2)
rm(mn,w,x,x2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42
)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
yc <- y - mean(y)
xc <- x - mean(x)
lm(yc ~ xc)
options(scipen = 999)
lm(yc ~ xc)
mean(y)
rm(x,y,xc,yc)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
rm(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
?lm
fit
library(ggplot2)
g <- ggplot(data.frame(x=x,y=y),aes(x=x,y=y))
g
fit
z <- (y -x*(-1.713))^2
mean(z)
lm(z ~ x)
z
g <- ggplot(data.frame(x=x,y=y),aes(x=x,y=y)) + geom_point()
g
sum(x*y) / (sum(x^2))
q()
data("mtcars")
str(mtcars)
range(mtcars$mpg)
table(mtcars$mpg)
table(mtcars$am)
fit1 <- lm(mpg ~ am, data = mtcars)
coef(fit1)
mtcarMan <- mtcars[mtcars[,9] == 1]
mtcarMan <- mtcars[,9] == 1
mtcarMan <- mtcars[mtcars[,9] == 1,]
mean(mtcarMan[,1])
mtcarAuto <- mtcars[mtcars[,9] == 0,]
mean(mtcarAuto[,1])
mean(mtcarAuto[,1])
mean(mtcarMan[,1])
ggplot(mtcars,aes(x=am,y=mpg))
library(ggplot2)
ggplot(mtcars,aes(x=am,y=mpg))
g <- ggplot(mtcars,aes(x=am,y=mpg))
g <- g + geom_point()
g
q()
library(swirl)
swirl()
fit <- lm(child ~ parent, galton)
sqrt(sum(resid(fit)^2)/(n-2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- sum(galton$child^2 - mu)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(sTot)
sRes <- sum(deviance(sTot$residuals^2)
)
sRes <- deviance(sTot)
sRes <- deviance(sTot/(n-2))
sRes <- deviance(sTot)
sRes <- sqrt(deviance(sTot)/(n-2))
sRes <- sqrt(deviance(sTot$Residuals)/(n-2))
sRes <- deviance(galton$child - sTot)
sRes <- deviance(galton$child - mean(galton$child))
sRes <- sqrt(deviance(fit)/n-2))
sRes <- sqrt(deviance(fit)/n-2)
sRes <- deviance(fit)
1 - sRes/sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
q()
library(swirl)
swirl()
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu <- mean(galton$child)
sTot <- (sum(galton$child - mu)^2)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(fit)
1 - sRes / sTot
summary(fit)$r.squared
cor(galton$child, galton$parent)^2
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
t.test(y ~ x)
df <- data.frame(x,y)
df
t.test(y ~ x, data = df)
t.test(y ~ x, paired = F, var.equal = F, data = df)
library(reshape2)
m <- melt(x,y)
t.test(y ~ x, paired = F, var.equal = F, data = m)
m
rm(m)
melt(df)
m <- melt(df)
t.test(value ~ variable, paired = F, var.equal = F, data = m)
data("mtcars")
fit2 <- lm(mpg ~ wt, data = mtcars)
mnWt <- mean(mtcars$wt)
mnWt
summary(fit2)$coefficients
mnWt + c(-1,1) * qt(.975,df=fit2$df) * 0.559101
-5.344472 + c(-1,1) * qt(.975,df=fit2$df) * 0.559101
?mtcars
predict(fit2, newdata = 3, interval = ("prediction"))
3 + c(-1,1) * qt(.975,df=fit2$df) * 0.559101
3 * (-5.344472) + 37.285126
21.25171 + c(-1,1) * qt(.975,df=fit2$df) * 0.559101
ssx <- sum((3-mean(mtcars$wt))^2))
ssx <- sum(3-mean(mtcars$wt))^2)
ssx <- sum(3-mean(mtcars$wt))^2)
ssx <- sum((3-mean(mtcars$wt))^2)
0.559101 * sqrt(1 + (1/32) + (3-3.21725)^2/ssx)
21.25171 + 0.7968415
df2 <- data.frame(wt=3)
predict(fit2,newdata = df2, interval = ("prediction"))
df3 <- data.frame(wt=mnWt)
predict(fit2,newdata = df3, interval = ("confidence"))
df4 <- data.frame(wt=2)
predict(fit2,newdata = df4, interval = ("prediction"))
2 * (-5.344472) + 37.285126
coef(fit2)
37.285126 /2
beta1 <- cor(mtcars$mpg, mtcars$wt) * sd(mtcars$mpg)/sd(mtcars$wt)
beta0 <- mean(mtcars$mpg) - beta1 * mean(mtcars$wt)
e <- mtcars$mpg - beta0 - (beta1 * mtcars$wt)
e
sum(e^2)
e2 <- mtcars$mpg - beta0 - mtcars$wt
sum(e2^2)
14805/278
e2 <- mtcars$mpg - (beta1 * mtcars$wt)
e2
sum(e2^2)
sum(e^2)
sum(mtcars$wt - mean(mtcars$wt))^2
predict(fit, newdata = df4, interval = "prediction")
resid(fit2)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
resid(fit)
sum((resid(fit)^2)
)
summary(fit)
fit2 <- lm(mpg ~ wt, data = mtcars)
predict(fit2, interval = ("prediction"))
predict(fit2, interval = ("prediction"))
coef(fit2)
37.285 *2
df <- data.frame(wt=1)
predict(fit2,newdata = df, interval = ("prediction"))
fit2$coefficients
sumCoef <- fit2$coefficients
sumCoef[1,1] + c(-1,1) * qt(.975, df=fit2$df) * sumCoef[1,2]
sumCoef[1,1] + c(-1,1) * qt(.975, df=fit2$df) * sumCoef[2,1]
sumCoef[1] + c(-1,1) * qt(.975, df=fit2$df) * sumCoef[2]
sumCoef <- summary(fit2$coefficients)
sumCoef[1,1] + c(-1,1) * qt(.975, df=fit2$df) * sumCoef[1,2]
sumCoef[1] + c(-1,1) * qt(.975, df=fit2$df) * sumCoef[2]
sumCoef[1] + c(-1,1) * qt(.975, df=fit2$df) * (sumCoef[2]/2)
sumCoef[1] + c(-1,1) * qt(.975, df=fit2$df) * (sumCoef[2]*2)
e2 <- resid(fit2)
sum(e2^2)
e1 <- resid(lm(mpg ~ 1, data = mtcars))
sum(e1^2)
1126-278
1126/278
df1 <- data.frame(wt=1)
predict(fit2,newdata = df1, interval = ("confidence"))
df1 <- data.frame(wt=2)
predict(fit2,newdata = df1, interval = ("confidence"))
coef(fit2)
-5.344472 /2
37.285126 + c(-1,1) * qt(.975, df=fit2$df) * -2.672236
y <- mtcars$mpg
x <- mtcars$wt
x2 <- x/2
lm <- (y ~ x2)
fit3 <- lm(y ~ x2)
df1 <- data.frame(wt=1)
predict(fit3,newdata = df1, interval = ("confidence"))
predict(fit3, newdata = df1, interval = ("confidence"))
predict(fit3, newdata = df1, interval = ("confidence"))
df1 <- data.frame(wt=1)
predict(fit3, newdata = df1, interval = ("confidence"))
predict(fit3,newdata = df1, interval = ("confidence"))
df1
df1 <- data.frame(y=1)
predict(fit3,newdata = df1, interval = ("confidence"))
fitt3
fit3
df1 <- data.frame(x2=1)
predict(fit3,newdata = df1, interval = ("confidence"))
coef(fit3)
2 * (-10.68894 )
37.285126 + c(-1,1) * qt(.975, df=fit2$df) * -21.37788
37.285126 + c(-1,1) * qt(.975, df=fit3$df) * -21.37788
37.285126 + c(-1,1) * qt(.975, df=fit2$df) * -10.68894
37.285126 + c(-1,1) * qt(.975, df=fit3$df) * -10.68894
predict(fit3,newdata = df1, interval = ("confidence"))
26.59618 - 24.82389
37.28513   - 10.68894
c(-1,1) * qt(.975, df=fit3$df) * -10.68894
c(-1,1) * qt(.975, df=fit3$df) * -20
c(-1,1) * qt(.975, df=fit3$df) * -5
c(-1,1) * qt(.975, df=fit2$df) * -5.344472
c(-1,1) * qt(.975, df=fit2$df) * -10.6
c(-1,1) * qt(.975, df=fit2$df) * -5.3
summary(fit2)$coefficients
sumCoef <- summary(fit2)$coefficients
sumCoef[2,1] + c(-1,1) * qt(.975, df=fit2$df) * sumCoef[2,2]
(sumCoef[2,1] + c(-1,1) * qt(.975, df=fit2$df) * sumCoef[2,2] ) / 2
(sumCoef[2,1] + c(-1,1) * qt(.975, df=fit2$df) * sumCoef[2,2] ) * 2
q()
library(swirl)
swirl()
ones <- rep(1, nrow(galton))
lm(child ~ ones + parent - 1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
q()
swirl()
library(swirl)
swirl()
all <- lm(Fertility ~ ., data = swiss)
all
summary(all)
lm(Fertility ~ Agriculture, data = swiss)
summary(lm(Fertility ~ Agriculture, data = swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms <- function(){
# Store the coefficient of linear models with different independent variables
cf <- c(coef(lm(Fertility ~ Agriculture, swiss))[2],
coef(lm(Fertility ~ Agriculture + Catholic,swiss))[2],
coef(lm(Fertility ~ Agriculture + Catholic + Education,swiss))[2],
coef(lm(Fertility ~ Agriculture + Catholic + Education + Examination,swiss))[2],
coef(lm(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality, swiss))[2])
print(cf)
}
makelms()
ec <- sum(swiss$Examination,swiss$Catholic)
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, data = swiss)
all$coefficients - efit$coefficients
6
dim(InsectSprays)
head(InsectSprays,15)
sA
summary(InsectSprays[,2])
sapply(InsectSprays,class)
fit <- lm(count ~ spray, data = InsectSprays)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray -1, data = InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count ~ spray, data = InsectSprays)
fit2 <- lm(count ~ spray, InsectSprays)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2]) - (fit$coef[3]) / 1.6011
(fit$coef[2] - fit$coef[3]) / 1.6011
q()
library(swirl)
swirl()
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger$Sex=="Female")
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex=="Female"])
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex=="Female",])
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
setwd("~/code/r/coursera/20170410_regresModel/mtCars")
library(datasets)
data("mtcars")
head mtcars
head (mtcars)
?mtcars
summary(lm(mpg ~ . - 1, mtcars))
summary(lm(mpg ~ cyl + hp + wt + am - 1, mtcars))
summary(lm(mpg ~ cyl + hp + wt + am, mtcars))
mtcarMan <- mtcars[mtcars[,9] == 1,]
mtcarAuto <- mtcars[mtcars[,9] == 0,]
table(mtcars$am)
fit1 <- lm(mpg ~ am, data = mtcars)
coef(fit1)
mean(mtcarAuto[,1])
mean(mtcarMan[,1])
g <- ggplot(mtcars,aes(x=am,y=mpg))
g <- g + geom_point()
library(ggplot2)
library(ggplot2)
g <- ggplot(mtcars,aes(x=am,y=mpg))
g <- g + geom_point()
g <- ggplot(mtcars,aes(x=am,y=mpg))
g <- g + geom_point()
g
summary(lm(mpg ~ cyl + hp + wt + am - 1 , mtcars))
fit1 <- lm(mpg ~ am, data = mtcars)
coef(fit1)
mean(mtcarAuto[,1])
mean(mtcarMan[,1])
summary(lm(mpg ~ am - 1 , mtcars))
mean(mtcarMan[,1])
summary(lm(mpg ~ am - 1 , mtcars))
summary(lm(mpg ~ cyl + hp + wt + am - 1 , mtcars))
summary(lm(mpg ~ am - 1 , mtcars))
summary(lm(mpg ~ factor(am) - 1 , mtcars))
mean(mtcarMan[,1])
mean(mtcarAuto[,1])
summary(lm(mpg ~ cyl + hp + wt + factor(am) - 1 , mtcars))
summary(lm(mpg ~ cyl + hp + wt + factor(am) , mtcars))
summary(lm(mpg ~ cyl + hp + wt + factor(am) - 1, mtcars))
summary(lm(mpg ~ factor(cyl) + hp + wt + factor(am) - 1, mtcars))
summary(lm(mpg ~ cyl + hp + wt + factor(am) - 1, mtcars))
q()
