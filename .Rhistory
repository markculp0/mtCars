t.test(g2,g1,paired = TRUE)$conf
num <- (15.34^2/8 + 18.23^2/21)
num <- (15.34^2/8 + 18.23^2/21)^2
den <- (15.34^2/8)^2 /7 + (18.23^2/21)^2 / 20
mdf <- num/den
mydf <- num/den
qt(.975,mydf)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
q()
library(swirl)
swirl()
1
2
2/(10/4)
15
qt(.95,15)
dim(fs)
t.test(father.son$sheight - father.son$fheight)
t.test(fs$sheight - fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
6
7
8
pt(2.5,15,lower.tail = FALSE)
qnorm(95,lower.tail = FALSE)
qnorm(95)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6,8,.5,lower.tail = FALSE)
pbinom(7,8,.5,lower.tail = TRUE)
ppois(9,5,lower.tail = FALSE)
q()
qt(.975,8)
1100 + c(-1,1) * qt(.975) * 10
1100 + c(-1,1) * qt(.975,8) * 10
2.3 / 2
t.test(3 - 5)
t.test(-2)
t.test(3,5,paired = F, var.equal = F)
-2 + c(-1,1) * qt(.975,18) * .3578
4 + c(-1,1) * qnorm(.975) * .5
6 + c(-1,1) * qnorm(.975) * 20
-4 + c(-1,1) * qt(.95,16) * .781
.2064*qnorm(.975)
q()
dim(ToothGrowth)
str(ToothGrowth)
head(ToothGrowth)
range(ToothGrowth$len)
unique(sort(ToothGrowth$supp))
str(ToothGrowth)
unique(sort(ToothGrowth$dose))
dim(ToothGrowth)
?ToothGrowth
unique(sort(ToothGrowth$supp))
table(length(ToothGrowth$dose), ToothGrowth$dose)
table(sum(ToothGrowth$dose), ToothGrowth$dose)
?table
table(ToothGrowth$dose)
table(ToothGrowth$supp)
q()
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, 30, 1, lower.tail = FALSE)
pnorm(30+z, 32, 1, lower.tail = FALSE)
pnorm(30+z, 32, 1, lower.tail = FALSE)
pnorm(30+z*2, 32, 1, lower.tail = FALSE)
pnorm(30+z*2, 32, 2, lower.tail = FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt= "one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample", alt= "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt= "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 26, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n = 26, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n = 26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n = 27, sd=1, type = "one.sample", alt = "one.sided")$delta
head(pValues)
pValues[< .05]
pValues < .05
sum(pValues < .05)
sum(p.adjust(pValues, method="bonferroni"))
sum(p.adjust(pValues, method="bonferroni") < 0.05)
sum(p.adjust(pValues, method="BH") < 0.05)
tail(trueStatus)
table(pValues2<.05, trueStatus)
.048
table(p.adjust(pValues2, method = "bonferroni") <.05, trueStatus)
table(p.adjust(pValues2, method = "BH") <.05, trueStatus)
1*1/6 + 2*1/6 + 3*1/6+4*1/6+5*1/6+6*1/6
print(g2)
head(sh)
nh
median(resampledMedians)
median(sh)
sam <- sample(fh, nh*B, replace = TRUE)
resam <- matrix(sam, B, nh)
meds <- apply(resam,1,median)
median(fh) - median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians,c(0.025,0.975))
quantile(meds,c(0.025,0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCounts
BCcounts
group
testStat
obs <- testStat(BCcounts, group)
obs
mean(Cdata$count) - mean(Bdata$count)
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
mean(perms > obs)
testStat(DEcounts,group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
q()
dir()
q()
library(UsingR)
install.packages("UsingR")
library(UsingR)
data(galton)
dim(galton)
head(galton)
long <- melt(galton)
library(reshape2)
long <- melt(galton)
head(long)
?melt
?aes
head(long)
g <- ggplot ( long , aes ( x = value , fill = variable ))
g
g <- ggplot ( long , aes ( x = value , fill = variable ))
g
g <- g + geom_histogram ( colour = "black" , binwidth = 1 )
g
g <- g + geom_histogram ( colour = "black" , binwidth = 1 )
g
g <- g + facet_grid ( . ~ variable )
g
g
q()
library ( UsingR ); data ( galton );
library ( manipulate )
install.packages("manipulate")
library ( manipulate )
mu <- mean(galton$child)
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child ))\
+ geom_histogram ( fill = "salmon" , colour\
= "black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child ))\
g <- ggplot ( galton , aes ( x = child ))
+ geom_histogram ( fill = "salmon" , colour\
= "black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour \
= "black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour \
= "black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour\
= "black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
mse <- mean (( galton $ child - mu ) ^ 2 )
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour =
"black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour\ =
"black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour\
= "black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour =
"black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour\ =
"black" , binwidth = 1
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour\ =
"black", binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour\
= "black", binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black", binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = " , round ( mse , 2 ), sep = "" ))
g
}
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", g <-
MSE = " , round ( mse , 2 ), sep = "" ))
manipulate ( myHist ( mu ), mu = slider ( 62 , 74 , step = 0.5 ))
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black", binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + (ggtitle ( paste ( "mu = " , mu , ", MSE = " ,
round ( mse , 2 ), sep = "" )) )
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black", binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = ",
round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black",
binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = ",
round ( mse , 2 ), sep = "" ))
g
}
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black",
binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = ",
round ( mse , 2 ), sep = "" ))
g
}
options(width = 100)
opts_chunk$set(message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = 'fig/')
options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
knit_hooks$set(plot = knitr:::hook_plot_html)
runif(1)
ggplot ( galton , aes ( x = parent , y = child )) + geom_point ()
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 ) g <-
g + geom_vline ( xintercept = mean ( galton $ child ), size = 3 )
g
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 ) g <-
g + geom_vline ( xintercept = mean ( galton $ child ), size = 3 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 ) g <-
g + geom_vline ( xintercept = mean ( galton $ child ), size = 3 )
g
rm(g)
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 ) g <-
g + geom_vline ( xintercept = mean ( galton $ child ), size = 3 )
g
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 )
g <- g + geom_vline ( xintercept = mean ( galton $ child ),
size = 3 )
g
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "
black" , binwidth = 1 )
g <- g + geom_vline ( xintercept = mean ( galton $ child ),
size = 3 )
g
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black",
binwidth = 1 )
g <- g + geom_vline ( xintercept = mean ( galton $ child ),
size = 3 )
g
ggplot ( galton , aes ( x = parent , y = child )) + geom_point ()
library (reshape2)
long <- melt(galton)
head(long)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
rm(mu)
myHist <- function ( mu ){
mse <- mean (( galton $ child - mu ) ^ 2 )
g <- ggplot ( galton , aes ( x = child )) +
geom_histogram ( fill = "salmon" , colour = "black",
binwidth = 1)
g <- g + geom_vline ( xintercept = mu , size = 3 )
g <- g + ggtitle ( paste ( "mu = " , mu , ", MSE = ",
round ( mse , 2 ), sep = "" ))
g
}
manipulate ( myHist ( mu ), mu = slider ( 62 , 74, step = 0.5 ))
parent - mean(parent)
galton$parent - mean(galton$parent)
I(galton$parent - mean(galton$parent))
?I
lm(I(child - mean(child)) ~ I(parent - mean(parent)), data = galton)
options(scipen = 999)
lm(I(child - mean(child)) ~ I(parent - mean(parent)), data = galton)
lm(I(child - mean(child)) ~ I(parent - mean(parent)) -1 , data = galton)
q()
library(swirl)
swirl()
install_course(Regression_Models)
install_course('Regression_Models'')
)
quit
)
;
]]]
000
exit
;
:::
??
library(swirl)
install_course("Regression_Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope,ols.ic))
all.equal(varChild, varRes, varEst)
all.equal(varChild, varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov()
cov(atten$mag)
cov(atten)
cov(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor,gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
rm(x,w)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x - mean(x))/sd(x)
rm(x,xn)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
summary(fit)
rm(fit,x,y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
rm(x)
data("mtcars")
fit <- lm(mpg ~ weight, mtcars)
str(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
rm(mtcars)
rm(fit)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
summary(fit)
plot(x,y)
rm(fit,x,y)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
mn <- mean(x)
x2 <- c(x,0.18,0.42,0.42)
mean(x2)
rm(mn,w,x,x2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42
)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
yc <- y - mean(y)
xc <- x - mean(x)
lm(yc ~ xc)
options(scipen = 999)
lm(yc ~ xc)
mean(y)
rm(x,y,xc,yc)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
rm(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
?lm
fit
library(ggplot2)
g <- ggplot(data.frame(x=x,y=y),aes(x=x,y=y))
g
fit
z <- (y -x*(-1.713))^2
mean(z)
lm(z ~ x)
z
g <- ggplot(data.frame(x=x,y=y),aes(x=x,y=y)) + geom_point()
g
sum(x*y) / (sum(x^2))
q()
setwd("~/code/r/coursera/20170410_regresModel/mtCars")
?mtcars
